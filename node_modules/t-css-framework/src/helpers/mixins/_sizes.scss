@mixin sizes($sizesMap) {
  $userMapLength      : length($sizesMap);
  $cssPropertiesNumber: 0;

  @if map-has-key($sizesMap, height) {
    height              : map-get($sizesMap, height);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  }

  @if map-has-key($sizesMap, maxHeight) {
    max-height          : map-get($sizesMap, maxHeight);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  } @else 
  if map-has-key($sizesMap, max-height) {
    max-height          : map-get($sizesMap, max-height);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  }

  @if map-has-key($sizesMap, maxWidth) {
    max-width           : map-get($sizesMap, maxWidth);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  } @else 
  if map-has-key($sizesMap, max-width) {
    max-width           : map-get($sizesMap, max-width);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  }

  @if map-has-key($sizesMap, minHeight) {
    min-height          : map-get($sizesMap, minHeight);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  } @else 
  if map-has-key($sizesMap, min-height) {
    min-height          : map-get($sizesMap, min-height);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  }

  @if map-has-key($sizesMap, minWidth) {
    min-width           : map-get($sizesMap, minWidth);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  } @else 
  if map-has-key($sizesMap, min-width) {
    min-width           : map-get($sizesMap, min-width);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  }

  @if map-has-key($sizesMap, width) {
    width               : map-get($sizesMap, width);
    $cssPropertiesNumber: $cssPropertiesNumber + 1;
  }

  @if $cssPropertiesNumber < $userMapLength {
    @warn "One or more keys passed to the mixin are invalid";
  }
  @if $userMapLength == 0 {
    @warn "The passed map is empty";
  }
}
